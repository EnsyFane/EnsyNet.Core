name: ensy-net-core
run-name: Ensy Net Core packaging

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      nugetVersionOverwrite:
        description: "NuGet version to publish"
        required: true
        type: string

permissions:
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET Core 8.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Setup .NET Core 9.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x

      - name: Setup Java 17.0 (Needed for Sonar)
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17.0'

      - name: Restore solution
        run: dotnet restore
        working-directory: ./src/Core

      - name: Build solution
        run: dotnet build --configuration Release --no-restore
        working-directory: ./src/Core

      - name: Install DotNet SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Test solution
        working-directory: ./
        shell: pwsh
        run: ./infra/scripts/run-tests.ps1 -composeFile "./src/Core/docker-compose.data-access-tests.yml" -dbContainer "db"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  package:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set NuGet version
        shell: pwsh
        run: ./infra/scripts/get-nuget-version.ps1 -nugetVersionOverride '${{ inputs.nugetVersionOverwrite }}' -ref ${{ github.ref }} -slnDirectory ./src/Core

      - name: Setup .NET Core 8.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Setup .NET Core 9.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x

      - name: Create package
        shell: pwsh
        run: dotnet pack EnsyNet.sln -c Release -o ./packed/EnsyNet.Core /p:Version=$env:nuget_version
        working-directory: ./src/Core

      - name: Push package
        shell: pwsh
        run: dotnet nuget push ./packed/EnsyNet.Core/*$version.nupkg --api-key ${{ secrets.NUGET_API_KEY }}
        working-directory: ./src/Core
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') )
