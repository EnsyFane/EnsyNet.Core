name: ensy-net-core
run-name: Ensy Net Core packaging

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      nugetVersionOverwrite:
        description: "Nuget version to publish to NuGet"
        required: true
        type: string

permissions:
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET Core 8.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Restore solution
        run: dotnet restore
        working-directory: ./src

      - name: Build solution
        run: dotnet build --configuration Release --no-restore
        working-directory: ./src

      - name: Test solution
        working-directory: ./
        shell: pwsh
        run: ./infra/scripts/run-tests.ps1 -composeFile "docker-compose.data-access-tests.yml" -dbContainer "db"

      - name: Generate coverage report 
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.2
        with:
          reports: ./test-results/coverage.xml
          targetdir: ./test-results
          reporttypes: MarkdownSummaryGithub;HtmlInline_AzurePipelines_Dark

      - uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: ./test-results/index.html

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: ./test-results/SummaryGithub.md

  package:
    runs-on: ubuntu-latest
    # needs: [ci]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set NuGet version
        shell: pwsh
        id: nugetVersionSetter
        run: ./infra/scripts/get-nuget-version.ps1 ${{ inputs.nugetVersionOverwrite }}

      - name: Setup .NET Core 8.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Create package
        run: dotnet pack EnsyNet.sln -c Release -o ./packed/EnsyNet.Core /p:Version=${{ steps.nugetVersionSetter.outputs.nuget_version }}
        working-directory: ./src

      - name: Push package
        run: dotnet nuget push .\packed\EnsyNet.Core\*$version.nupkg --api-key ${{ secrets.NUGET_API_KEY }}
        working-directory: ./src
